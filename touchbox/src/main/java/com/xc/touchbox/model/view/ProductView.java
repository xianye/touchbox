package com.xc.touchbox.model.view;

// Generated 2015-5-23 23:22:04 by Hibernate Tools 3.4.0.CR1

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;

import org.apache.commons.lang3.StringUtils;
import org.apache.struts2.json.annotations.JSON;

import com.xc.touchbox.model.Goods;
import com.xc.touchbox.model.ISysParam;
import com.xc.touchbox.model.ProductCat;

/**
 * Product generated by hbm2java
 */
public class ProductView implements java.io.Serializable {

	private Long productId;
	private String adminName;
	private int productCatId;
	private String period;
	private String name;
	private String description;
	private float originalPrice;
	private float price;
	private String titleImageUrl;
	private String bannerImageUrl;
	private String imageUrl;
	private String deliveryWarehouse;
	private boolean discountExisted = true;
	private int giftClassroomPeriodNum;
	private int status;
	private Date createTime;
	private Date updateTime;

	private List<Goods> goodsList = new ArrayList<Goods>();

	public ProductView() {
	}

	public Long getProductId() {
		return this.productId;
	}

	public void setProductId(Long productId) {
		this.productId = productId;
	}

	public int getProductCatId() {
		return productCatId;
	}

	public void setProductCatId(int productCatId) {
		this.productCatId = productCatId;
	}

	/**
	 * 获取产品分类对象
	 * 
	 * @return
	 */
	public ProductCat getProductCat() {
		if (productCatId > 0) {
			Map<Integer, ProductCat> a = (Map<Integer, ProductCat>) ISysParam
					.getCtx().getServletContext().getAttribute("productCatMap");
			if (a != null && a.containsKey(productCatId)) {
				return a.get(productCatId);
			}
		}
		return null;
	}

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public float getPrice() {
		return this.price;
	}

	public void setPrice(float price) {
		this.price = price;
	}

	public String getTitleImageUrl() {
		return titleImageUrl;
	}

	public void setTitleImageUrl(String titleImageUrl) {
		this.titleImageUrl = titleImageUrl;
	}

	public String getImageUrl() {
		return this.imageUrl;
	}

	public void setImageUrl(String imageUrl) {
		this.imageUrl = imageUrl;
	}

	public String getDeliveryWarehouse() {
		return deliveryWarehouse;
	}

	public void setDeliveryWarehouse(String deliveryWarehouse) {
		this.deliveryWarehouse = deliveryWarehouse;
	}

	public String getDeliveryWarehouseName() {
		return ISysParam.getDeliveryWarehouseName(deliveryWarehouse);
	}

	public boolean isDiscountExisted() {
		return this.discountExisted;
	}

	public void setDiscountExisted(boolean discountExisted) {
		this.discountExisted = discountExisted;
	}

	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@JSON(format = "yyyy-MM-dd HH:mm:ss")
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	public String getAdminName() {
		return adminName;
	}

	public void setAdminName(String adminName) {
		this.adminName = adminName;
	}

	public JSONArray getPeriod() {
		if (StringUtils.isNotEmpty(period)) {
			JSONArray a = JSONArray.fromObject(period);
			return a;
		}
		return null;
	}

	public Map<String, Boolean> getCheckedPeriod() {
		Map<String, Boolean> c = new HashMap<String, Boolean>();
		if (StringUtils.isNotEmpty(period)) {
			JSONArray a = JSONArray.fromObject(period);
			if (a.size() > 0) {
				for (int i = 0; i < a.size(); i++) {
					c.put(a.getString(i), true);
				}
			}
		}
		return c;
	}

	public void setPeriod(String period) {
		this.period = period;
	}

	/**
	 * 获取周期名称
	 * 
	 * @return
	 */
	public List<String> getPeriodName() {
		String c = null;
		String[] numChinese = new String[] { "一", "二", "三", "四", "五", "六", "七",
				"八", "九", "十", "十一", "十二" };
		List<String> periodName = new ArrayList<String>();
		if (StringUtils.isNotEmpty(period)) {
			JSONArray a = JSONArray.fromObject(period);
			if (a.size() > 0) {
				for (int i = 0; i < a.size(); i++) {
					Integer b = a.getInt(i);
					if (b % 12 == 0) {
						c = numChinese[b / 12 - 1] + "年";
					} else if (b == 6) {
						c = "半年";
					} else {
						c = numChinese[b - 1] + "月";
					}
					periodName.add(c);
				}
			}
		}
		return periodName;
	}

	public float getOriginalPrice() {
		return originalPrice;
	}

	public void setOriginalPrice(float originalPrice) {
		this.originalPrice = originalPrice;
	}

	public String getBannerImageUrl() {
		return bannerImageUrl;
	}

	public void setBannerImageUrl(String bannerImageUrl) {
		this.bannerImageUrl = bannerImageUrl;
	}

	public int getGiftClassroomPeriodNum() {
		return giftClassroomPeriodNum;
	}

	public void setGiftClassroomPeriodNum(int giftClassroomPeriodNum) {
		this.giftClassroomPeriodNum = giftClassroomPeriodNum;
	}

	public List<Goods> getGoodsList() {
		return goodsList;
	}

	public void setGoodsList(List<Goods> goodsList) {
		this.goodsList = goodsList;
	}

}
